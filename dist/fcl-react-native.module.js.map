{"version":3,"file":"fcl-react-native.module.js","sources":["../src/utils/react-native/ServiceDiscovery.js","../src/utils/react-native/default-config.js","../src/linking/index.ts","../src/utils/react-native/render-browser.js","../src/utils/react-native/render-deeplink.js","../src/utils/react-native/exec-local.js","../src/utils/react-native/strategies/utils/service-endpoint.js","../src/utils/react-native/strategies/utils/browser.js","../src/utils/react-native/strategies/deeplink-rpc.js","../src/utils/react-native/coreStrategies.js","../src/fcl-react-native.ts"],"sourcesContent":["import { useState, useEffect, createElement } from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Service} Service\n */\n\n/**\n * Fetches data from a URL using the POST method and returns the parsed JSON response.\n *\n * @param {string} url - The URL to fetch.\n * @param {object} opts - Additional options for the fetch request.\n * @returns {Promise<object>} - A promise that resolves to the parsed JSON response.\n */\nconst fetcher = (url, opts) => {\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(opts),\n  }).then(d => d.json())\n}\n\n/**\n * Default loading component that renders the \"Loading...\" text.\n *\n * @returns {JSX.Element} - The loading component.\n */\nconst DefaultLoadingComponent = () => createElement(Text, null, \"Loading...\")\n\n/**\n * Default empty component that renders the \"No Wallets Found\" text.\n *\n * @returns {JSX.Element} - The empty component.\n */\nconst DefaultEmptyComponent = () => createElement(Text, null, \"No Wallets Found\")\n\n/**\n * Default service card component that renders a TouchableOpacity with the service provider's name as text.\n *\n * @param {object} props - The component props.\n * @param {Service} props.service - The service object.\n * @param {Function} props.onPress - The onPress event handler.\n * @returns {JSX.Element} - The service card component.\n */\nconst DefaultServiceCard = ({\n  service,\n  onPress\n}) => {\n  return createElement(\n    TouchableOpacity,\n    { onPress },\n    createElement(Text, null, service?.provider?.name),\n  )\n}\n\n/**\n * Default wrapper component that renders a View with the specified style and children components.\n *\n * @param {object} props - The component props.\n * @param {JSX.Element[]} props.children - The children components.\n * @returns {JSX.Element} - The wrapper component.\n */\nconst DefaultWrapper = ({ children }) => createElement(View, { style: styles.container }, ...children)\n\n/**\n * Custom hook for service discovery.\n *\n * @param {object} params - The hook parameters.\n * @param {object} params.fcl - The fcl instance.\n * @returns {object} - The service discovery result object.\n * @property {object[]} services - The discovered services.\n * @property {boolean} isLoading - A flag indicating whether the services are being loaded.\n * @property {Function} authenticateService - A function to authenticate a service.\n */\nexport const useServiceDiscovery = ({ fcl }) => {\n  const [services, setServices] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  const getServices = async () => {\n    setIsLoading(true)\n    const endpoint = await fcl.config.get(\"discovery.authn.endpoint\")\n    try {\n      const response = await fetcher(endpoint, {\n        fclVersion: fcl.VERSION,\n        userAgent: 'ReactNative',\n        supportedStrategies: ['HTTP/POST'],\n      })\n      setServices(response)\n      setIsLoading(false)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    getServices()\n  }, [])\n\n  /**\n   * Authenticates the provided service using the fcl instance.\n   *\n   * @param {object} service - The service object to authenticate.\n   */\n  const authenticateService = (service) => {\n    if (services.includes(service)) {\n      fcl.authenticate({ service })\n    }\n  }\n\n  return {\n    services,\n    isLoading,\n    authenticateService,\n  }\n}\n\n/**\n * Component for service discovery.\n *\n * @param {object} props - The component props.\n * @param {object} props.fcl - The fcl instance.\n * @param {Function} [props.Loading=DefaultLoadingComponent] - The loading component.\n * @param {Function} [props.Empty=DefaultEmptyComponent] - The empty component.\n * @param {Function} [props.ServiceCard=DefaultServiceCard] - The service card component.\n * @param {Function} [props.Wrapper=DefaultWrapper] - The wrapper component.\n * @returns {JSX.Element} - The service discovery component.\n */\nexport const ServiceDiscovery = ({\n  fcl,\n  Loading = DefaultLoadingComponent,\n  Empty = DefaultEmptyComponent,\n  ServiceCard = DefaultServiceCard,\n  Wrapper = DefaultWrapper\n}) => {\n  const { services, isLoading, authenticateService } = useServiceDiscovery({ fcl })\n\n  return createElement(\n    Wrapper,\n    null,\n    isLoading && createElement(Loading),\n    !isLoading && services.length === 0 && createElement(Empty),\n    !isLoading && services.map((service, index) => {\n      return (\n        createElement(ServiceCard, {\n          key: service?.provider?.address ?? index,\n          service,\n          onPress: () => {\n            authenticateService(service)\n          }\n        })\n      )\n    })\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst getAsyncStorage = () => {\n  try {\n    const ASYNC_STORAGE = {\n      can: true,\n      get: async key => JSON.parse(await AsyncStorage.getItem(key)),\n      put: async (key, value) => await AsyncStorage.setItem(key, JSON.stringify(value)),\n    }\n    return ASYNC_STORAGE\n  } catch (error) {\n    return null\n  }\n}\n\nexport const getDefaultConfig = () => {\n  return {\n    \"discovery.wallet.method.default\": \"DEEPLINK/RPC\",\n    \"fcl.storage.default\": getAsyncStorage(),\n  }\n}\n\n","import qs from 'qs';\nimport { EmitterSubscription, Linking as NativeLinking, Platform } from 'react-native';\n\n// @docsMissing\nexport type QueryParams = qs.ParsedQs;\n\n// @needsAudit @docsMissing\nexport type ParsedURL = {\n  scheme: string | null;\n  hostname: string | null;\n  /**\n   * The path into the app specified by the URL.\n   */\n  path: string | null;\n  /**\n   * The set of query parameters specified by the query string of the url used to open the app.\n   */\n  queryParams: URLSearchParams | null;\n};\n\n// @needsAudit\nexport type CreateURLOptions = {\n  /**\n   * URI protocol `<scheme>://` that must be built into your native app.\n   */\n  scheme?: string;\n  /**\n   * An object of parameters that will be converted into a query string.\n   */\n  queryParams?: QueryParams;\n  /**\n   * Should the URI be triple slashed `scheme:///path` or double slashed `scheme://path`.\n   */\n  isTripleSlashed?: boolean;\n};\n\n// @docsMissing\nexport type EventType = {\n  url: string;\n  nativeEvent?: MessageEvent;\n};\n\n// @docsMissing\nexport type URLListener = (event: EventType) => void;\n\n// @docsMissing\nexport type NativeURLListener = (nativeEvent: MessageEvent) => void;\n\n// @docsMissing\nexport type SendIntentExtras = { key: string; value: string | number | boolean };\n\n\nfunction validateURL(url: string): void {\n  if(typeof url !== 'string'){\n    throw new Error('Invalid URL: should be a string. Was: ' + url)\n  }\n  if(!url){\n    throw new Error('Invalid URL: cannot be empty')\n  }\n}\n\nfunction getHostUri(): string | null {\n  // if (Constants.expoConfig?.hostUri) {\n  //   return Constants.expoConfig.hostUri;\n  // } else if (!hasCustomScheme()) {\n  //   // we're probably not using up-to-date xdl, so just fake it for now\n  //   // we have to remove the /--/ on the end since this will be inserted again later\n  //   return removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n  // } else {\n  //   return null;\n  // }\n  // TODO\n  return \"\"\n}\n\nfunction removeScheme(url: string): string {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\n\nfunction removePort(url: string): string {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\n\nfunction removeLeadingSlash(url: string): string {\n  return url.replace(/^\\//, '');\n}\n\nfunction removeTrailingSlashAndQueryString(url: string): string {\n  return url.replace(/\\/?\\?.*$/, '');\n}\n\nfunction ensureTrailingSlash(input: string, shouldAppend: boolean): string {\n  const hasSlash = input.endsWith('/');\n  if (hasSlash && !shouldAppend) {\n    return input.substring(0, input.length - 1);\n  } else if (!hasSlash && shouldAppend) {\n    return `${input}/`;\n  }\n  return input;\n}\n\nfunction ensureLeadingSlash(input: string, shouldAppend: boolean): string {\n  const hasSlash = input.startsWith('/');\n  if (hasSlash && !shouldAppend) {\n    return input.substring(1);\n  } else if (!hasSlash && shouldAppend) {\n    return `/${input}`;\n  }\n  return input;\n}\n\n// @needsAudit\n/**\n * Helper method for constructing a deep link into your app, given an optional path and set of query\n * parameters. Creates a URI scheme with two slashes by default.\n *\n * The scheme in bare and standalone must be defined in the Expo config (`app.config.js` or `app.json`)\n * under `expo.scheme`.\n *\n * # Examples\n * - Bare: `<scheme>://path` - uses provided scheme or scheme from Expo config `scheme`.\n * - Standalone, Custom: `yourscheme://path`\n * - Web (dev): `https://localhost:19006/path`\n * - Web (prod): `https://myapp.com/path`\n * - Expo Client (dev): `exp://128.0.0.1:19000/--/path`\n * - Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\n *\n * @param path Addition path components to append to the base URL.\n * @param namedParameters Additional options object.\n * @return A URL string which points to your app with the given deep link information.\n */\nexport function createURL(\n  path: string,\n  { scheme, queryParams = {}, isTripleSlashed = false }: CreateURLOptions = {}\n): string {\n  if (Platform.OS === 'web') {\n    // if (!Platform.isDOMAvailable) return '';\n\n    const origin = ensureTrailingSlash(window.location.origin, false);\n    let queryString = qs.stringify(queryParams);\n    if (queryString) {\n      queryString = `?${queryString}`;\n    }\n\n    let outputPath = path;\n    if (outputPath) outputPath = ensureLeadingSlash(path, true);\n\n    return encodeURI(`${origin}${outputPath}${queryString}`);\n  }\n\n  // const resolvedScheme = resolveScheme({ scheme });\n  const resolvedScheme = ''\n\n  let hostUri = getHostUri() || '';\n\n  // if (hasCustomScheme() && isExpoHosted()) {\n  //   hostUri = '';\n  // }\n\n  // if (path) {\n  //   if (isExpoHosted() && hostUri) {\n  //     path = `/--/${removeLeadingSlash(path)}`;\n  //   }\n  //   if (isTripleSlashed && !path.startsWith('/')) {\n  //     path = `/${path}`;\n  //   }\n  // } else {\n  //   path = '';\n  // }\n\n  // merge user-provided query params with any that were already in the hostUri\n  // e.g. release-channel\n  let queryString = '';\n  const queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    let paramsFromHostUri = {};\n    try {\n      const parsedParams = qs.parse(queryString);\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch {}\n    queryParams = {\n      ...queryParams,\n      ...paramsFromHostUri,\n    };\n  }\n  queryString = qs.stringify(queryParams);\n  if (queryString) {\n    queryString = `?${queryString}`;\n  }\n\n  hostUri = ensureLeadingSlash(hostUri, !isTripleSlashed);\n\n  return encodeURI(\n    `${scheme}:${isTripleSlashed ? '/' : ''}/${hostUri}${path}${queryString}`\n  );\n}\n\n// @needsAudit\n/**\n * Helper method for parsing out deep link information from a URL.\n * @param url A URL that points to the currently running experience (e.g. an output of `Linking.createURL()`).\n * @return A `ParsedURL` object.\n */\nexport function parse(url: string): ParsedURL {\n  validateURL(url);\n\n  const parsed = new URL(url);\n\n  // for (const param in parsed.searchParams) {\n  //   parsed.query[param] = decodeURIComponent(parsed.query[param]!);\n  // }\n  const queryParams = parsed.searchParams;\n\n  // const hostUri = getHostUri() || '';\n  // const hostUriStripped = removePort(removeTrailingSlashAndQueryString(hostUri));\n\n  let path = parsed.pathname || null;\n  let hostname = parsed.hostname || null;\n  let scheme = parsed.protocol || null;\n\n  if (scheme) {\n    // Remove colon at end\n    scheme = scheme.substring(0, scheme.length - 1);\n  }\n\n  // if (path) {\n  //   path = removeLeadingSlash(path);\n\n  //   let expoPrefix: string | null = null;\n  //   if (hostUriStripped) {\n  //     const parts = hostUriStripped.split('/');\n  //     expoPrefix = parts.slice(1).concat(['--/']).join('/');\n  //   }\n\n  //   if (isExpoHosted() && !hasCustomScheme() && expoPrefix && path.startsWith(expoPrefix)) {\n  //     path = path.substring(expoPrefix.length);\n  //     hostname = null;\n  //   } else if (path.indexOf('+') > -1) {\n  //     path = path.substring(path.indexOf('+') + 1);\n  //   }\n  // }\n\n  return {\n    hostname,\n    path,\n    queryParams,\n    scheme,\n  };\n}\n\n// @needsAudit\n/**\n * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n * It is recommended to use the [`useURL()`](#useurl) hook instead.\n * @param type The only valid type is `'url'`.\n * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n * [`EventType`](#eventype).\n * @return An EmitterSubscription that has the remove method from EventSubscription\n * @see [React Native Docs Linking page](https://reactnative.dev/docs/linking#addeventlistener).\n */\nexport function addEventListener(type: 'url', handler: URLListener): EmitterSubscription {\n  return NativeLinking.addEventListener(type, handler);\n}\n\n// @needsAudit\n/**\n * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n * for more information.\n * @param url A URL for the operating system to open, eg: `tel:5555555`, `exp://`.\n * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n * are no applications registered for the URL or the user cancels the dialog.\n */\nexport async function openURL(url: string): Promise<true> {\n  validateURL(url);\n  return await NativeLinking.openURL(url);\n}","import WebBrowser from '@toruslabs/react-native-web-browser';\nimport { FCL_REDIRECT_URL_PARAM_NAME, URL } from \"@onflow/fcl-core\"\nimport * as Linking from '@/linking'\nimport { NativeModules } from 'react-native'\n\n/**\n *\n * @param {URL} src\n * @param {object} opts\n * @returns {[object, () => void]}\n */\nexport function renderBrowser(src, opts = {}) {\n  const { SCHEME_DEEP_LINK_APP } = NativeModules?.ReactNativeConfigModule || {}\n  const redirectUrl = Linking.createURL(\"$$fcl_auth_callback$$\", {\n    scheme: SCHEME_DEEP_LINK_APP,\n    queryParams: {},\n  })\n  const url = new URL(src.toString())\n  url.searchParams.append(FCL_REDIRECT_URL_PARAM_NAME, redirectUrl)\n  const webbrowser = WebBrowser.openAuthSessionAsync(url.toString())\n\n  const unmount = () => {\n    try {\n      WebBrowser.dismissAuthSession()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  // Call onClose when the webbrowser is closed\n  webbrowser.then(() => {\n    if (opts?.onClose) {\n      opts.onClose()\n    }\n  })\n\n  return [webbrowser, unmount]\n}\n","import * as Linking from '@/linking'\nimport { AppState } from \"react-native\"\nimport { URL } from \"@onflow/fcl-core\"\n\n/**\n * Renders a deeplink view (i.e. deep links to a wallet app)\n *\n * @param {URL} src\n * @param {object} opts\n * @param {() => void} [opts.onClose]\n * @returns {[null, () => void]}\n */\nexport function renderDeeplink(src, opts = {}) {\n  const url = new URL(src.toString())\n\n  // Custom schemes (i.e mywallet://) are not supported for\n  // security reasons. These schemes can be hijacked by malicious\n  // apps and impersonate the wallet.\n  //\n  // Wallet developers should register a universal link instead.\n  // (i.e https://mywallet.com/ or https://link.mywallet.com/)\n  //\n  // Additionally this allows the wallet to redirect to the app\n  // store/show custom web content if the wallet is not installed.\n  if (url.protocol !== \"https:\") {\n    throw new Error(\n      \"Deeplink must be https scheme.  Custom schemes are not supported, please use a universal link/app link instead.\"\n    )\n  }\n\n  // Link to the target url\n  Linking.openURL(url.toString())\n\n  const onClose = opts.onClose || (() => { })\n\n  const onAppStateChange = state => {\n    if (state === \"active\") {\n      unmount()\n      onClose()\n    }\n  }\n  AppState.addEventListener(\"change\", onAppStateChange)\n\n  const unmount = () => {\n    AppState.removeEventListener(\"change\", onAppStateChange)\n  }\n\n  return [null, unmount]\n}\n","import {renderBrowser} from \"./render-browser\"\nimport {renderDeeplink} from \"./render-deeplink\"\n\nconst NOT_IMPLEMENTED = strategy => () => {\n  throw new Error(\n    `${strategy} Strategy util has not been implemented on this platform`\n  )\n}\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": NOT_IMPLEMENTED(\"VIEW/IFRAME\"),\n  \"VIEW/POP\": NOT_IMPLEMENTED(\"VIEW/IFRAME\"),\n  \"VIEW/TAB\": NOT_IMPLEMENTED(\"VIEW/TAB\"),\n  \"VIEW/MOBILE_BROWSER\": renderBrowser,\n  \"VIEW/DEEPLINK\": renderDeeplink,\n}\n\nexport async function execLocal(\n  service,\n  opts = {serviceEndpoint: () => {}, onClose: () => {}}\n) {\n  const {serviceEndpoint} = opts\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {URL} from \"@onflow/fcl-core\"\n\nconst isBodyEmpty = (body) => {\n  return !body || (body?.data !== undefined && Object.keys(body).filter(key => key !== 'data').length === 0)\n}\n\nexport function serviceEndpoint(service, config, body) {\n  const url = new URL(service.endpoint)\n  if (!isBodyEmpty(body)) {\n    url.searchParams.append('fclMessageJson', JSON.stringify({...body, config}))\n  } else {\n    url.searchParams.append('fclMessageJson', JSON.stringify({config}))\n  }\n\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import * as Linking from '@/linking'\nimport {renderBrowser} from \"../../render-browser\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {FCL_RESPONSE_PARAM_NAME, buildMessageHandler} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function browser(service, config, body, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = noop\n  const onReady = noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send: noop,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  const parseDeeplink = ({url}) => {\n    const {queryParams} = Linking.parse(url)\n    const eventDataRaw = queryParams[FCL_RESPONSE_PARAM_NAME]\n    const eventData = JSON.parse(eventDataRaw)\n\n    handler({data: eventData})\n  }\n\n  const [browser, unmount] = renderBrowser(\n    serviceEndpoint(service, config, body)\n  )\n  // Android deeplink parsing\n  Linking.addEventListener(\"url\", parseDeeplink)\n  // iOS deeplink parsing\n  browser.then(parseDeeplink)\n  return {send: noop, close}\n\n  function close() {\n    try {\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n}\n","import { normalizePollingResponse } from \"@onflow/fcl-core\"\nimport {browser} from \"./utils/browser\"\n\nexport function execDeeplinkRPC({service, config, body}) {\n  return new Promise((resolve, reject) => {\n\n    browser(service, config, body, {\n      onResponse: (e, {close}) => {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n      onClose: () => {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {CORE_STRATEGIES, getExecHttpPost} from \"@onflow/fcl-core\"\nimport {execLocal} from \"./exec-local\"\nimport {execDeeplinkRPC} from './strategies/deeplink-rpc'\n\nexport const coreStrategies = ({\n  [CORE_STRATEGIES[\"HTTP/RPC\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"HTTP/POST\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"DEEPLINK/RPC\"]]: execDeeplinkRPC\n})\n","export {\n  VERSION,\n  query,\n  verifyUserSignatures,\n  serialize,\n  tx,\n  events,\n  pluginRegistry,\n  discovery,\n  t,\n  WalletUtils,\n  AppUtils,\n  InteractionTemplateUtils,\n  getChainId,\n  TestUtils,\n  config,\n  send,\n  decode,\n  account,\n  block,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  build,\n  withPrefix,\n  sansPrefix,\n  display,\n  cadence,\n  cdc,\n  createSignableVoucher,\n  voucherIntercept,\n  voucherToTxId,\n  transaction,\n  script,\n  ping,\n  atBlockHeight,\n  atBlockId,\n  getAccount,\n  getEvents,\n  getEventsAtBlockHeightRange,\n  getEventsAtBlockIds,\n  getBlock,\n  getBlockHeader,\n  getCollection,\n  getTransactionStatus,\n  getTransaction,\n  getNetworkParameters,\n  getNodeVersionInfo,\n  authorizations,\n  authorization,\n  args,\n  arg,\n  proposer,\n  payer,\n  limit,\n  ref,\n  params,\n  param,\n  validator,\n  invariant,\n  subscribeEvents,\n  nodeVersionInfo,\n} from \"@onflow/fcl-core\"\n\nimport {getMutate, getCurrentUser, initServiceRegistry, setIsReactNative} from \"@onflow/fcl-core\"\nexport const mutate = getMutate({platform: \"react-native\"})\n\nconst currentUser = getCurrentUser({platform: \"react-native\"})\n\nexport {currentUser}\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport {config} from \"@onflow/config\"\nimport {\n  coreStrategies,\n  getDefaultConfig,\n  useServiceDiscovery,\n  ServiceDiscovery,\n} from \"./utils/react-native\"\n\nconfig(getDefaultConfig())\n\n// Set chain id default on access node change\ninitServiceRegistry({coreStrategies})\n\n// Set isReactNative flag\nsetIsReactNative(true)\n\nexport {useServiceDiscovery, ServiceDiscovery}\n"],"names":["fetcher","url","opts","fetch","method","headers","body","JSON","stringify","then","d","json","DefaultLoadingComponent","createElement","Text","DefaultEmptyComponent","DefaultServiceCard","_ref","service","onPress","TouchableOpacity","provider","name","DefaultWrapper","_ref2","children","View","style","styles","container","useServiceDiscovery","_ref3","fcl","services","setServices","useState","isLoading","setIsLoading","getServices","endpoint","config","get","response","fclVersion","VERSION","userAgent","supportedStrategies","error","console","useEffect","authenticateService","includes","authenticate","ServiceDiscovery","_ref4","Loading","Empty","ServiceCard","Wrapper","length","map","index","key","address","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","getAsyncStorage","ASYNC_STORAGE","can","parse","AsyncStorage","getItem","put","value","setItem","getDefaultConfig","validateURL","Error","ensureTrailingSlash","input","shouldAppend","hasSlash","endsWith","substring","ensureLeadingSlash","startsWith","createURL","path","scheme","queryParams","isTripleSlashed","arguments","undefined","Platform","OS","origin","window","location","queryString","qs","outputPath","encodeURI","hostUri","queryStringMatchResult","match","paramsFromHostUri","parsedParams","parsed","URL","searchParams","pathname","hostname","protocol","addEventListener","type","handler","NativeLinking","openURL","renderBrowser","src","SCHEME_DEEP_LINK_APP","NativeModules","ReactNativeConfigModule","redirectUrl","Linking","toString","append","FCL_REDIRECT_URL_PARAM_NAME","webbrowser","WebBrowser","openAuthSessionAsync","unmount","dismissAuthSession","log","onClose","renderDeeplink","onAppStateChange","state","AppState","removeEventListener","NOT_IMPLEMENTED","strategy","VIEWS","execLocal","serviceEndpoint","isBodyEmpty","data","Object","keys","filter","params","entries","noop","browser","send","close","onMessage","onReady","onResponse","buildMessageHandler","parseDeeplink","eventDataRaw","FCL_RESPONSE_PARAM_NAME","eventData","execDeeplinkRPC","Promise","resolve","reject","e","resp","normalizePollingResponse","status","reason","coreStrategies","CORE_STRATEGIES","getExecHttpPost","mutate","getMutate","platform","currentUser","getCurrentUser","unauthenticate","reauthenticate","signUp","logIn","authz","authorization","initServiceRegistry","setIsReactNative"],"mappings":"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"}